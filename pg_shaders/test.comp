#version 450

layout (set = 0, binding = 0, rgba8) uniform image2D img; 

float map(float i, float i_min, float i_max, float o_min, float o_max)
{
    return ((i - i_min) / (i_max - i_min)) * (o_max - o_min) + o_min;
}

vec2 comp_mult(vec2 a, vec2 b)
{
    return vec2(
        (a.x * b.x) - (a.y * b.y),
        a.x * b.y + a.y * b.x
    );
}

layout( push_constant ) uniform constants
{
    int WIDTH;
    int HEIGHT;
} PC;

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
void main()
{
    uvec2 pos = gl_GlobalInvocationID.xy;
    if(pos.x > PC.WIDTH || pos.y > PC.HEIGHT)
    {
        return;
    }

    vec2 comp_pos = vec2(
        map(pos.x, 0, PC.WIDTH, -2.2f, 2.2f),
        map(pos.y, 0, PC.HEIGHT, -1.2f, 1.2f)
    );

    vec2 z = comp_pos;
    //comp_pos = vec2(-0.123, -0.745);
    int i = 0;
    for(i = 0; i < 100; i ++)
    {
        z = comp_mult(z, z) + comp_pos; 

        if(length(z) > 2)
            break;
    }

    if(length(z) > 2)
    {
        imageStore(img, ivec2(pos.xy), vec4(0.0f, i / 100.f, 0.0f, 1.0f));
    }
    else
    {
        imageStore(img, ivec2(pos.xy), vec4(0.0f));
    }

}
